{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DE SCHOOL BOY\\\\Desktop\\\\MARKET_DAy\\\\MarketDay\\\\viewMoreScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport MapView from 'react-native-maps';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar ViewMoreScreen = function (_React$Component) {\n  _inherits(ViewMoreScreen, _React$Component);\n\n  var _super = _createSuper(ViewMoreScreen);\n\n  function ViewMoreScreen() {\n    var _this;\n\n    _classCallCheck(this, ViewMoreScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      inputValue: 'is this still available ?',\n      seller: 'school B',\n      sent: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ViewMoreScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.main,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: \"\" + this.props.navigation.getParam('source')\n        },\n        style: styles.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, this.props.navigation.getParam('name')), React.createElement(Text, {\n        style: styles.price,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, \" $\", this.props.navigation.getParam('price')), React.createElement(View, {\n        style: styles.view2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        source: require(\"./assets/school.jpg\"),\n        style: styles.image2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, \" \", this.state.seller)), React.createElement(View, {\n        style: styles.view3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          color: \"green\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, this.state.sent), React.createElement(TextInput, {\n        value: this.state.inputValue,\n        style: styles.input,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.setState({\n            sent: \"Message successfully sent to  seller\"\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }\n      }, React.createElement(Text, {\n        style: styles.contactSeller,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 10\n        }\n      }, \"contact seller\"))), React.createElement(View, {\n        style: styles.mapcontainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 1\n        }\n      }, React.createElement(MapView, {\n        style: styles.map,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 1\n        }\n      })));\n    }\n  }]);\n\n  return ViewMoreScreen;\n}(React.Component);\n\nViewMoreScreen.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    title: navigation.getParam('name'),\n    headerTintColor: \"green\"\n  };\n};\n\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1\n  },\n  image: {\n    alignSelf: 'center',\n    width: Dimensions.get('window').width,\n    height: 300\n  },\n  price: {\n    color: 'green'\n  },\n  image2: {\n    borderRadius: 50,\n    borderWidth: 2,\n    width: 50,\n    height: 50\n  },\n  view2: {\n    flexDirection: 'row',\n    paddingTop: '5%'\n  },\n  name: {\n    fontSize: 19,\n    paddingTop: '8%',\n    color: 'purple'\n  },\n  view3: {\n    alignItems: 'center',\n    paddingTop: '8%'\n  },\n  input: {\n    color: 'green',\n    borderColor: 'grey',\n    borderWidth: 3,\n    borderRadius: 50,\n    width: '90%',\n    height: 35,\n    backgroundColor: 'gray',\n    textAlign: 'center'\n  },\n  contactSeller: {\n    backgroundColor: 'green',\n    width: Dimensions.get(\"window\").width,\n    height: 35,\n    borderRadius: 50,\n    paddingTop: 7,\n    fontSize: 18,\n    textAlign: 'center',\n    margin: 4,\n    color: 'white'\n  },\n  mapcontainer: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  map: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height / 2\n  }\n});\nexport default ViewMoreScreen;","map":{"version":3,"sources":["C:/Users/DE SCHOOL BOY/Desktop/MARKET_DAy/MarketDay/viewMoreScreen.js"],"names":["React","Component","MapView","ViewMoreScreen","state","inputValue","seller","sent","styles","main","uri","props","navigation","getParam","image","price","view2","require","image2","name","view3","textAlign","color","input","setState","contactSeller","mapcontainer","map","navigationOptions","title","headerTintColor","StyleSheet","create","flex","alignSelf","width","Dimensions","get","height","borderRadius","borderWidth","flexDirection","paddingTop","fontSize","alignItems","borderColor","backgroundColor","margin","justifyContent"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport MapView from 'react-native-maps';\r\nimport {\r\n  ScrollView,\r\n  Image,\r\n  StyleSheet,\r\nTouchableOpacity,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  Dimensions,\r\n} from 'react-native';\r\n// import Counter from \"./components/Counter\"\r\n// import { Card } from 'react-native-paper';\r\nclass ViewMoreScreen extends React.Component{\r\n  static navigationOptions=({navigation})=>({\r\n    title:navigation.getParam('name'),\r\n    headerTintColor:\"green\"\r\n  })\r\n\r\n  state = {\r\n    inputValue: 'is this still available ?',\r\n    seller: 'school B',\r\n    sent:\"\"\r\n  };\r\n\r\n  render(){\r\n    return(\r\n  \r\n\r\n      <ScrollView style={styles.main}>\r\n   \r\n      <Image\r\n        source={{ uri:`${this.props.navigation.getParam('source')}`\r\n     \r\n\r\n      }}\r\n        style={styles.image}\r\n      />\r\n\r\n\r\n\r\n{/* <Text>{this.props.navigation.getParam('id')}</Text>\r\n        <Text>{this.props.navigation.getParam('source')}</Text>\r\n        <Text>{this.props.navigation.getParam('name')}</Text>\r\n        <Text>{this.props.navigation.getParam('price')}</Text> */}\r\n\r\n\r\n\r\n      <Text>{this.props.navigation.getParam('name')}</Text>\r\n\r\n      <Text style={styles.price}> ${this.props.navigation.getParam('price')}</Text>\r\n      {/* <View style={styles.separate} /> */}\r\n      <View style={styles.view2}>\r\n        <Image\r\n          source={require('./assets/school.jpg')}\r\n          style={styles.image2}\r\n        />\r\n\r\n        <Text style={styles.name}> {this.state.seller}</Text>\r\n\r\n       \r\n      </View>\r\n      \r\n      <View style={styles.view3}>\r\n      <Text style={{textAlign:\"center\", color:\"green\"}}>{this.state.sent}</Text>\r\n        <TextInput value={this.state.inputValue} style={styles.input} />\r\n       <TouchableOpacity onPress={()=>this.setState({sent:\"Message successfully sent to  seller\"})} >\r\n         <Text style={styles.contactSeller}>contact seller</Text>\r\n         </TouchableOpacity>\r\n\r\n      </View>\r\n<View style={styles.mapcontainer}>\r\n<MapView style={styles.map}/>\r\n</View>\r\n\r\n   \r\n  </ScrollView>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  main: {\r\n    flex: 1,\r\n  },\r\n  image: {\r\n    alignSelf: 'center',\r\n    width: Dimensions.get('window').width,\r\n\r\n    height: 300,\r\n  },\r\n  price: {\r\n    color: 'green',\r\n  },\r\n\r\n  image2: {\r\n    borderRadius: 50,\r\n    borderWidth: 2,\r\n    width: 50,\r\n    height: 50,\r\n  },\r\n  view2: {\r\n    flexDirection: 'row',\r\n    paddingTop: '5%',\r\n  },\r\n  name: {\r\n    fontSize:19,\r\n    paddingTop: '8%',\r\n    \r\n    color: 'purple',\r\n  },\r\n\r\n  view3: {\r\n    alignItems: 'center',\r\n    paddingTop: '8%',\r\n  },\r\n  input: {\r\n    color: 'green',\r\n    borderColor: 'grey',\r\n    borderWidth: 3,\r\n    borderRadius: 50,\r\n    width: '90%',\r\n    height: 35,\r\n  \r\n    backgroundColor: 'gray',\r\n\r\n    textAlign: 'center',\r\n    // alignself: 'center',\r\n  },\r\n  contactSeller: {\r\n    backgroundColor: 'green',\r\n    width: Dimensions.get(\"window\").width,\r\n    height: 35,\r\n    borderRadius: 50,\r\n    paddingTop: 7,\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n    \r\n    margin: 4,\r\n    color: 'white',\r\n  },\r\n  mapcontainer:{\r\n    flex:1,\r\n    backgroundColor:\"#fff\",\r\n    alignItems:\"center\",\r\n    justifyContent:\"center\"\r\n  },\r\n  map:{\r\n    width:Dimensions.get(\"window\").width,\r\n    height:Dimensions.get(\"window\").height/2\r\n  }\r\n \r\n});\r\n\r\n\r\nexport default ViewMoreScreen"]},"metadata":{},"sourceType":"module"}