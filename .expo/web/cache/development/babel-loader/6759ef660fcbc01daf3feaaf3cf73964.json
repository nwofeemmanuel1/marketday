{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DE SCHOOL BOY\\\\Desktop\\\\MARKET_DAy\\\\MarketDay\\\\addlisting.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Card, CardTitle, CardContent, CardAction, CardButton, CardImage } from \"react-native-cards\";\n\nvar AddListingScreen = function (_React$Component) {\n  _inherits(AddListingScreen, _React$Component);\n\n  var _super = _createSuper(AddListingScreen);\n\n  function AddListingScreen() {\n    var _this;\n\n    _classCallCheck(this, AddListingScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selectedImage: '',\n      setSelectedImage: ''\n    };\n\n    _this.openImagePickerAsync = function _callee() {\n      var permissionResult, pickerResult;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n            case 2:\n              permissionResult = _context.sent;\n\n              if (!(permissionResult.granted === false)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", alert('permission to access images denied'));\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n            case 9:\n              pickerResult = _context.sent;\n\n              if (!(pickerResult.cancelled === true)) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 14:\n              if (_this.state.selectedImage.length == 0) {\n                _this.setState({\n                  selectedImage: pickerResult.uri\n                });\n\n                console.log(pickerResult);\n              } else {\n                _this.setState({\n                  setSelectedImage: pickerResult.uri\n                });\n\n                console.log(pickerResult);\n              }\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.showimage = function () {\n      if (_this.state.selectedImage.length <= 0) {\n        return React.createElement(View, {\n          style: styles.main,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 14\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this.openImagePickerAsync();\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }\n        }, React.createElement(Card, {\n          style: styles.card,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 3\n          }\n        }, React.createElement(CardImage, {\n          source: require(\"./assets/addlisting.png\"),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 4\n          }\n        }), React.createElement(CardAction, {\n          separator: true,\n          inColumn: false,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 3\n          }\n        }, React.createElement(Text, {\n          style: {\n            marginLeft: 25,\n            color: \"gray\"\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 1\n          }\n        }, \"Add listing\")))));\n      } else if (_this.state.selectedImage.length >= 1) {\n        return React.createElement(View, {\n          style: styles.addeditem,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 1\n          }\n        }, React.createElement(View, {\n          style: styles.imageview,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }\n        }, React.createElement(Image, {\n          source: {\n            uri: _this.state.selectedImage,\n            height: Dimensions.get(\"window\").width / 2.3,\n            width: Dimensions.get(\"window\").width / 2.3\n          },\n          style: {\n            right: 5\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }\n        })), _this.state.setSelectedImage.length >= 1 ? React.createElement(Image, {\n          source: {\n            uri: _this.state.setSelectedImage,\n            height: 140,\n            width: 140\n          },\n          style: {\n            right: 5\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }\n        }) : React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this.openImagePickerAsync();\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 14\n          }\n        }, React.createElement(Card, {\n          style: styles.card,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 3\n          }\n        }, React.createElement(CardImage, {\n          source: require(\"./assets/addlisting.png\"),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 4\n          }\n        }), React.createElement(CardAction, {\n          separator: true,\n          inColumn: false,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 3\n          }\n        }, React.createElement(Text, {\n          style: {\n            marginLeft: 25,\n            color: \"gray\"\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 1\n          }\n        }, \"add one more image\")))));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(AddListingScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 3\n        }\n      }, this.showimage(), React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 2\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: styles.bodyview,\n        behavior: \"padding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 1\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Item Name\",\n        style: styles.textinput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 1\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Description\",\n        style: styles.textinput,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 1\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Price\",\n        style: styles.textinput2,\n        keyboardType: \"numeric\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 1\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Catergory\",\n        style: styles.textinput2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 1\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"LoadingIndicator\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        style: styles.post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 3\n        }\n      }, \"POST\")), React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          color: \"gray\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 1\n        }\n      }, \"OR\"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"screen\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        style: styles.cancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 3\n        }\n      }, \"Cancel\")), React.createElement(Button, {\n        title: \"press me\",\n        onPress: function onPress() {\n          return console.log(_this2.state.selectedImage.fileName);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 1\n        }\n      }))));\n    }\n  }]);\n\n  return AddListingScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    flex: 1\n  },\n  main: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: StatusBar.currentHeight * 2,\n    flexDirection: \"row\",\n    opacity: 1\n  },\n  card: {\n    width: 140,\n    height: 100,\n    alignItems: \"center\",\n    textAlign: \"center\"\n  },\n  addeditem: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: \"space-around\",\n    paddingTop: StatusBar.currentHeight * 2,\n    flexDirection: \"row\",\n    borderRadius: 50,\n    left: 10\n  },\n  bodyview: {\n    paddingTop: StatusBar.currentHeight,\n    flex: 1\n  },\n  textinput: {\n    borderColor: \"gray\",\n    borderRadius: 50,\n    borderWidth: 1,\n    textAlign: \"center\",\n    margin: 2,\n    width: Dimensions.get(\"window\").width / 1.1\n  },\n  textinput2: {\n    borderColor: \"gray\",\n    borderRadius: 50,\n    borderWidth: 1,\n    textAlign: \"center\",\n    margin: 2,\n    width: Dimensions.get(\"window\").width / 2\n  },\n  post: {\n    borderColor: \"gray\",\n    borderRadius: 50,\n    borderWidth: 1,\n    textAlign: \"center\",\n    margin: 7,\n    width: Dimensions.get(\"window\").width / 1.1,\n    padding: 5,\n    textAlign: \"center\",\n    backgroundColor: \"green\",\n    color: \"white\"\n  },\n  cancel: {\n    borderColor: \"gray\",\n    borderRadius: 50,\n    borderWidth: 1,\n    textAlign: \"center\",\n    margin: 7,\n    width: Dimensions.get(\"window\").width / 1.1,\n    padding: 5,\n    textAlign: \"center\",\n    backgroundColor: \"gray\",\n    color: \"white\"\n  }\n});\nexport default AddListingScreen;","map":{"version":3,"sources":["C:/Users/DE SCHOOL BOY/Desktop/MARKET_DAy/MarketDay/addlisting.js"],"names":["React","ImagePicker","Card","CardTitle","CardContent","CardAction","CardButton","CardImage","AddListingScreen","state","selectedImage","setSelectedImage","openImagePickerAsync","requestCameraPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","pickerResult","cancelled","length","setState","uri","console","log","showimage","styles","main","card","require","marginLeft","color","addeditem","imageview","height","Dimensions","get","width","right","container","bodyview","textinput","textinput2","props","navigation","navigate","post","textAlign","cancel","fileName","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","paddingTop","StatusBar","currentHeight","flexDirection","opacity","borderRadius","left","borderColor","borderWidth","margin","padding"],"mappings":"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","sourcesContent":["\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport {\r\n  Image,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  KeyboardAvoidingView,\r\n  ScrollView,\r\n  Dimensions,\r\nTextInput,\r\n  StatusBar,\r\n  Button\r\n} from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport {Card,CardTitle,CardContent, CardAction,CardButton, CardImage} from \"react-native-cards\"\r\nclass AddListingScreen extends React.Component {\r\n  state = { selectedImage: '', setSelectedImage: '' };\r\n\r\n  openImagePickerAsync = async () => {\r\n    let permissionResult = await ImagePicker.requestCameraPermissionsAsync();\r\n    if (permissionResult.granted === false) {\r\n      return alert('permission to access images denied');\r\n    } else {\r\n      let pickerResult = await ImagePicker.launchImageLibraryAsync();\r\n      if (pickerResult.cancelled === true) {\r\n        return;\r\n      } else {\r\n        if (this.state.selectedImage.length == 0) {\r\n          this.setState({ selectedImage: pickerResult.uri});\r\n       console.log(pickerResult)\r\n        } else {\r\n          this.setState({ setSelectedImage: pickerResult.uri });\r\n          console.log(pickerResult)\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n \r\n\r\n// assynclistingadder=(data)=>{\r\n//   this.props.screenProps.onlistingadd(data)\r\n\r\n// }\r\n  \r\n\r\n\r\n  showimage=()=>{\r\n    if(this.state.selectedImage.length <=0){\r\n      return <View style={styles.main}>\r\n        {/* <Card> */}\r\n      <TouchableOpacity onPress={ ()=>this.openImagePickerAsync()} >\r\n         \r\n  <Card style={styles.card}>\r\n   <CardImage source={require(\"./assets/addlisting.png\")}  \r\n  \r\n   /> \r\n\r\n  <CardAction\r\n  separator={true}\r\n  inColumn={false}\r\n  >\r\n<Text style={{marginLeft:25,color:\"gray\"}} >Add listing</Text>\r\n\r\n  </CardAction>\r\n  </Card> \r\n\r\n        </TouchableOpacity> \r\n        {/* </Card> */}\r\n      </View>\r\n\r\n    }else if ( this.state.selectedImage.length >= 1  ){\r\nreturn(\r\n\r\n<View style={styles.addeditem} >\r\n\r\n \r\n        <View style={styles.imageview}>\r\n          <Image\r\n            source={{\r\n              uri:this.state.selectedImage,\r\n              height: Dimensions.get(\"window\").width/2.3,\r\n              width: Dimensions.get(\"window\").width/2.3,\r\n            }}\r\n            style={{ right: 5 }}\r\n          />\r\n        \r\n        </View>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {this.state.setSelectedImage.length >= 1 ? \r\n          //  <View   >\r\n          <Image\r\n            source={{\r\n              uri:this.state.setSelectedImage,\r\n              height: 140,\r\n              width: 140,\r\n            }}\r\n            style={{ right: 5 }}\r\n          /> \r\n       \r\n          : \r\n             <TouchableOpacity onPress={ ()=>this.openImagePickerAsync()} >\r\n         \r\n  <Card style={styles.card}>\r\n   <CardImage source={require(\"./assets/addlisting.png\")}  \r\n  \r\n   />\r\n\r\n  <CardAction\r\n  separator={true}\r\n  inColumn={false}\r\n  >\r\n<Text style={{marginLeft:25,color:\"gray\"}} >add one more image</Text>\r\n\r\n  </CardAction>\r\n  </Card>\r\n\r\n        </TouchableOpacity> \r\n       \r\n    }\r\n</View>\r\n\r\n    \r\n      \r\n      \r\n      )\r\n    \r\n\r\n          }\r\n\r\n  }\r\n\r\n  render() {\r\n   \r\n    return (\r\n     \r\n  <ScrollView style={styles.container}>\r\n{this.showimage()}\r\n <Card> \r\n<KeyboardAvoidingView style={styles.bodyview} behavior=\"padding\">\r\n \r\n<TextInput  placeholder=\"Item Name\"    style={styles.textinput}/>\r\n<TextInput  placeholder=\"Description\"    style={styles.textinput}/>\r\n<TextInput  placeholder=\"Price\"    style={styles.textinput2} keyboardType=\"numeric\"/>\r\n<TextInput  placeholder=\"Catergory\"    style={styles.textinput2}/>\r\n<TouchableOpacity onPress={()=>this.props.navigation.navigate(\"LoadingIndicator\")}>\r\n  <Text style={styles.post}>POST</Text>\r\n</TouchableOpacity>\r\n<Text style={{textAlign:\"center\", color:\"gray\"}}>OR</Text>\r\n\r\n<TouchableOpacity onPress={()=>this.props.navigation.navigate(\"screen\")}>\r\n  <Text style={styles.cancel}>Cancel</Text>\r\n</TouchableOpacity>\r\n<Button title=\"press me\" onPress={()=>console.log(this.state.selectedImage.fileName)}/>\r\n\r\n</KeyboardAvoidingView>\r\n </Card> \r\n\r\n  </ScrollView>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n\r\n\r\n    flex:1,\r\n\r\n  },\r\n  main:{\r\n\r\n\r\n\r\n    flex:1,\r\nalignItems:\"center\",\r\n    justifyContent:\"center\",\r\n    paddingTop:StatusBar.currentHeight*2,\r\n    flexDirection:\"row\",\r\n    opacity:1\r\n  },\r\n\r\n\r\n  card:{\r\nwidth:140,\r\nheight:100,\r\n  alignItems:\"center\",\r\ntextAlign:\"center\",\r\n\r\n  },\r\n\r\n  addeditem:{\r\n    flex:1,\r\nflexDirection:'row',\r\njustifyContent:\"space-around\",\r\n    paddingTop:StatusBar.currentHeight * 2,\r\n    flexDirection:\"row\",\r\n  borderRadius:50,\r\n    left:10\r\n  },\r\n  bodyview:{\r\n    paddingTop:StatusBar.currentHeight,\r\n    flex:1\r\n  },\r\n\r\n   textinput:{\r\n    borderColor:\"gray\",\r\n    borderRadius:50,\r\n    borderWidth:1,\r\n    textAlign:\"center\",\r\n    margin:2,\r\n    width:Dimensions.get(\"window\").width /1.1,\r\n  \r\n  },\r\n  textinput2:{\r\n    borderColor:\"gray\",\r\n    borderRadius:50,\r\n    borderWidth:1,\r\n    textAlign:\"center\",\r\n    margin:2,\r\n    width:Dimensions.get(\"window\").width /2,\r\n  \r\n    \r\n  },\r\n  post:{\r\n     borderColor:\"gray\",\r\n    borderRadius:50,\r\n    borderWidth:1,\r\n    textAlign:\"center\",\r\n    margin:7,\r\n    width:Dimensions.get(\"window\").width /1.1,\r\n    padding:5,\r\n    textAlign:\"center\",\r\n    backgroundColor:\"green\",\r\n    color:\"white\"\r\n  },\r\n\r\n  cancel:{\r\n     borderColor:\"gray\",\r\n    borderRadius:50,\r\n    borderWidth:1,\r\n    textAlign:\"center\",\r\n    margin:7,\r\n    width:Dimensions.get(\"window\").width /1.1,\r\n    padding:5,\r\n    textAlign:\"center\",\r\n    backgroundColor:\"gray\",\r\n    color:\"white\"\r\n  }\r\n\r\n});\r\n\r\nexport default AddListingScreen;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}