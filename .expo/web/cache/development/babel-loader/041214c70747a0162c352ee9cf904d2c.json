{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DE SCHOOL BOY\\\\Desktop\\\\MARKET_DAy\\\\MarketDay\\\\transactions\\\\refund.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar Refund = function (_React$Component) {\n  _inherits(Refund, _React$Component);\n\n  var _super = _createSuper(Refund);\n\n  function Refund() {\n    var _this;\n\n    _classCallCheck(this, Refund);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.dynamicRefundProccessor = function () {\n      if (_this.props.screenProps.userInfo.Refund >= 1) {\n        return React.createElement(View, {\n          style: styles.mainview,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 3\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: \"center\",\n            fontSize: 20,\n            fontWeight: \"bold\",\n            color: 'green'\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 1\n          }\n        }, \"Proccess Refunds\"), React.createElement(TextInput, {\n          style: styles.textinput,\n          keyboardType: \"numeric\",\n          value: \"\" + _this.props.screenProps.userInfo.Refund,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 1\n          }\n        }), React.createElement(TextInput, {\n          placeholder: \"bank\",\n          style: styles.textinput,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 1\n          }\n        }), React.createElement(TextInput, {\n          placeholder: \"Account Number\",\n          style: styles.textinput,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 1\n          }\n        }), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this.props.navigation.navigate(\"RequestProccessed\");\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 1\n          }\n        }, React.createElement(Text, {\n          style: styles.button,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 1\n          }\n        }, \"Refund\")));\n      } else {\n        return React.createElement(View, {\n          style: styles.mainview,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 3\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: \"center\",\n            fontSize: 20,\n            fontWeight: \"bold\",\n            color: 'green'\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 1\n          }\n        }, \"Proccess Refunds\"), React.createElement(TextInput, {\n          style: styles.textinput,\n          keyboardType: \"numeric\",\n          value: \"\" + _this.props.screenProps.userInfo.Refund,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 1\n          }\n        }), React.createElement(TextInput, {\n          placeholder: \"bank\",\n          style: styles.textinput,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 1\n          }\n        }), React.createElement(TextInput, {\n          placeholder: \"Account Number\",\n          style: styles.textinput,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 1\n          }\n        }), React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this.props.navigation.navigate(\"BadRequest\");\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 1\n          }\n        }, React.createElement(Text, {\n          style: styles.button,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 1\n          }\n        }, \"Refund\")));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Refund, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 20,\n          fontWeight: \"bold\",\n          color: \"green\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }\n      }, this.props.screenProps.userInfo.Refund), this.dynamicRefundProccessor());\n    }\n  }]);\n\n  return Refund;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#E5E5E5\"\n  },\n  mainview: {\n    alignItems: \"center\",\n    marginTop: 20,\n    backgroundColor: \"#fff\",\n    height: 390,\n    width: \"85%\",\n    alignSelf: \"center\",\n    borderColor: \"#e1e8ed\",\n    borderWidth: 1,\n    justifyContent: \"center\"\n  },\n  textinput: {\n    margin: 5,\n    textAlign: 'center',\n    width: \"85%\",\n    borderRadius: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    alignSelf: \"center\"\n  },\n  button: {\n    backgroundColor: 'green',\n    alignSelf: 'center',\n    width: Dimensions.get(\"window\").width / 1.6,\n    height: 35,\n    borderRadius: Platform.OS === \"ios\" ? 17 : 50,\n    paddingTop: 6,\n    fontSize: 18,\n    textAlign: 'center',\n    margin: 7,\n    color: 'white',\n    overflow: \"hidden\"\n  }\n});\nexport default Refund;","map":{"version":3,"sources":["C:/Users/DE SCHOOL BOY/Desktop/MARKET_DAy/MarketDay/transactions/refund.js"],"names":["React","Refund","dynamicRefundProccessor","props","screenProps","userInfo","styles","mainview","textAlign","fontSize","fontWeight","color","textinput","navigation","navigate","button","container","Component","StyleSheet","create","flex","backgroundColor","alignItems","marginTop","height","width","alignSelf","borderColor","borderWidth","justifyContent","margin","borderRadius","Dimensions","get","Platform","OS","paddingTop","overflow"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {\r\n    View,\r\n    ScrollView,\r\n    Text,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    StyleSheet,\r\n    Dimensions\r\n}from \"react-native\"\r\n\r\nclass Refund extends React.Component{\r\ndynamicRefundProccessor=()=>{\r\n  if(this.props.screenProps.userInfo.Refund >=1){\r\n    return(\r\n\r\n  <View style={styles.mainview}>\r\n     \r\n<Text style={{   textAlign:\"center\",fontSize:20,fontWeight:\"bold\",color: 'green'}}>Proccess Refunds</Text>\r\n<TextInput style={styles.textinput} keyboardType=\"numeric\" value={`${this.props.screenProps.userInfo.Refund}`}/>\r\n<TextInput placeholder=\"bank\" style={styles.textinput}/>\r\n<TextInput placeholder=\"Account Number\" style={styles.textinput} />\r\n\r\n<TouchableOpacity onPress={()=>this.props.navigation.navigate(\"RequestProccessed\")}>\r\n<Text style={styles.button}>Refund</Text>\r\n</TouchableOpacity>\r\n  </View>\r\n    )\r\n  }else{\r\nreturn(\r\n  <View style={styles.mainview}>\r\n     \r\n<Text style={{   textAlign:\"center\",fontSize:20,fontWeight:\"bold\",color: 'green'}}>Proccess Refunds</Text>\r\n<TextInput  style={styles.textinput} keyboardType=\"numeric\"value={`${this.props.screenProps.userInfo.Refund}`}/>\r\n<TextInput placeholder=\"bank\" style={styles.textinput}/>\r\n<TextInput placeholder=\"Account Number\" style={styles.textinput} />\r\n\r\n<TouchableOpacity onPress={()=>this.props.navigation.navigate(\"BadRequest\")}>\r\n<Text style={styles.button}>Refund</Text>\r\n</TouchableOpacity>\r\n  </View>)\r\n  \r\n  }\r\n}\r\n\r\n    render(){\r\n        return(\r\n          \r\n<ScrollView style={styles.container}>\r\n     <Text \r\n     style={{\r\n         textAlign:\"center\",\r\n         fontSize:20,fontWeight:\"bold\",\r\n         color:\"green\"\r\n    }}>{this.props.screenProps.userInfo.Refund}</Text>\r\n{/* \r\n  <View style={styles.mainview}>\r\n     \r\n<Text style={{   textAlign:\"center\",fontSize:20,fontWeight:\"bold\",color: 'green'}}>Proccess Refunds</Text>\r\n<TextInput placeholder=\"amount\" style={styles.textinput} keyboardType=\"numeric\" value=\"$20.00\"/>\r\n<TextInput placeholder=\"bank\" style={styles.textinput}/>\r\n<TextInput placeholder=\"Account Number\" style={styles.textinput} />\r\n\r\n<TouchableOpacity>\r\n<Text style={styles.button}>Refund</Text>\r\n</TouchableOpacity>\r\n  </View> */}\r\n\r\n  {this.dynamicRefundProccessor()}\r\n</ScrollView>\r\n         \r\n        )\r\n    \r\n    \r\n    }\r\n}\r\n\r\nconst styles=StyleSheet.create( {\r\ncontainer:{\r\n    flex:1,\r\nbackgroundColor:\"#E5E5E5\",\r\n\r\n},\r\nmainview:{\r\n alignItems:\"center\",  \r\nmarginTop:20,\r\nbackgroundColor:\"#fff\",\r\nheight:390,\r\nwidth:\"85%\",\r\nalignSelf:\"center\",\r\nborderColor:\"#e1e8ed\",\r\nborderWidth:1,\r\njustifyContent:\"center\"\r\n},\r\ntextinput:{\r\n  margin:5,\r\n    textAlign: 'center',\r\n    // color: 'white',\r\n    width:\"85%\" ,\r\n    borderRadius: 50,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    alignSelf:\"center\"\r\n},\r\n  button: {\r\n    backgroundColor: 'green',\r\n    alignSelf: 'center',\r\n    width: Dimensions.get(\"window\").width/1.6,\r\n    // marginLeft: Dimensions.get('window').width /8,\r\n    height: 35,\r\n    borderRadius: Platform.OS===\"ios\" ? 17 :50,\r\n \r\n    paddingTop: 6,\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n    margin:7,\r\n    color: 'white',\r\n    overflow:\"hidden\"\r\n  },\r\n    })\r\nexport default Refund\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}