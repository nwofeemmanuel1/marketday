{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DE SCHOOL BOY\\\\Desktop\\\\MARKET_DAy\\\\MarketDay\\\\SuccessScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar SuccessScreen = function (_Component) {\n  _inherits(SuccessScreen, _Component);\n\n  var _super = _createSuper(SuccessScreen);\n\n  function SuccessScreen() {\n    var _this;\n\n    _classCallCheck(this, SuccessScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      height: 20,\n      width: 20,\n      opacity: 0.1\n    };\n    _this.show = {\n      showcontact: true\n    };\n\n    _this.shouldComponentUpdate = function () {\n      if (_this.state.height >= 200) {\n        clearInterval(_this.state.intervalid);\n\n        _this.props.navigation.navigate(\"MainApp\");\n\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    _this.handlesuccess = function () {\n      return {\n        height: _this.state.height,\n        width: _this.state.width,\n        opacity: _this.state.opacity\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(SuccessScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var intervalid = setInterval(function () {\n        _this2.setState({\n          height: _this2.state.height += 5,\n          width: _this2.state.height += 5,\n          opacity: _this2.state.opacity + 0.03,\n          intervalid: intervalid\n        });\n      }, 10);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.mainview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 5\n        }\n      }, React.createElement(Image, {\n        source: require(\"./assets/done.png\"),\n        style: this.handlesuccess(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 6\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }\n      }, \"success you already registerd  \"));\n    }\n  }]);\n\n  return SuccessScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  mainview: {\n    alignItems: \"center\",\n    paddingTop: \"50%\"\n  },\n  imageitem: {\n    height: 200,\n    width: 200,\n    opacity: 1\n  },\n  text: {\n    color: 'green'\n  }\n});\nexport default SuccessScreen;","map":{"version":3,"sources":["C:/Users/DE SCHOOL BOY/Desktop/MARKET_DAy/MarketDay/SuccessScreen.js"],"names":["React","Component","SuccessScreen","state","height","width","opacity","show","showcontact","shouldComponentUpdate","clearInterval","intervalid","props","navigation","navigate","handlesuccess","setInterval","setState","styles","mainview","require","text","StyleSheet","create","alignItems","paddingTop","imageitem","color"],"mappings":";;;;;;;;;;;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;IAIMC,a;;;;;AAEJ,2BAAc;AAAA;;AAAA;;AACZ;AADY,UAIdC,KAJc,GAIR;AACNC,MAAAA,MAAM,EAAC,EADD;AAEJC,MAAAA,KAAK,EAAC,EAFF;AAGJC,MAAAA,OAAO,EAAC;AAHJ,KAJQ;AAAA,UAUhBC,IAVgB,GAUX;AACHC,MAAAA,WAAW,EAAC;AADT,KAVW;;AAAA,UAoDhBC,qBApDgB,GAoDM,YAAI;AACxB,UAAG,MAAKN,KAAL,CAAWC,MAAX,IAAoB,GAAvB,EAA2B;AAE1BM,QAAAA,aAAa,CAAC,MAAKP,KAAL,CAAWQ,UAAZ,CAAb;;AACF,cAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B;;AACE,eAAO,KAAP;AACG,OALJ,MAKQ;AACL,eAAQ,IAAR;AAEA;AAIJ,KAjEe;;AAAA,UAmEhBC,aAnEgB,GAmEF,YAAI;AAChB,aACE;AACGX,QAAAA,MAAM,EAAC,MAAKD,KAAL,CAAWC,MADrB;AAEAC,QAAAA,KAAK,EAAC,MAAKF,KAAL,CAAWE,KAFjB;AAGAC,QAAAA,OAAO,EAAC,MAAKH,KAAL,CAAWG;AAHnB,OADF;AAOD,KA3Ee;;AAAA;AAGb;;;;WA8BH,6BAAmB;AAAA;;AAEnB,UAAIK,UAAU,GAAEK,WAAW,CAAC,YAAI;AAC9B,QAAA,MAAI,CAACC,QAAL,CAAc;AACbb,UAAAA,MAAM,EAAC,MAAI,CAACD,KAAL,CAAWC,MAAX,IAAoB,CADd;AAEdC,UAAAA,KAAK,EAAC,MAAI,CAACF,KAAL,CAAWC,MAAX,IAAoB,CAFZ;AAGhBE,UAAAA,OAAO,EAAC,MAAI,CAACH,KAAL,CAAWG,OAAX,GAAoB,IAHZ;AAIhBK,UAAAA,UAAU,EAACA;AAJK,SAAd;AAKG,OANsB,EAMpB,EANoB,CAA3B;AAaC;;;WA+BD,kBAAQ;AAGN,aAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,qBAAtB;AAA6C,QAAA,KAAK,EAAE,KAAKL,aAAL,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFD,CAFF;AAUD;;;;EA9F2BpB,S;;AAuG5B,IAAMiB,MAAM,GAACI,UAAU,CAACC,MAAX,CAAmB;AAChCJ,EAAAA,QAAQ,EAAC;AACRK,IAAAA,UAAU,EAAC,QADH;AAEPC,IAAAA,UAAU,EAAC;AAFJ,GADuB;AAKhCC,EAAAA,SAAS,EAAC;AACRtB,IAAAA,MAAM,EAAC,GADC;AAERC,IAAAA,KAAK,EAAC,GAFE;AAGRC,IAAAA,OAAO,EAAC;AAHA,GALsB;AAUhCe,EAAAA,IAAI,EAAC;AACHM,IAAAA,KAAK,EAAC;AADH;AAV2B,CAAnB,CAAb;AAgBA,eAAezB,aAAf","sourcesContent":["\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport {   View ,Text,StyleSheet,Image, Button} from 'react-native';\r\n// import MainApp from './MainApp';\r\n\r\nclass SuccessScreen extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    // shouldComponentUpdate=this.intervalid.bind(this)\r\n  }\r\n  state={\r\n  height:20,\r\n    width:20,\r\n    opacity:0.1,\r\n}\r\n\r\nshow={\r\n  showcontact:true\r\n}\r\n\r\n\r\n\r\n// successtext=\"success \"\r\n\r\n// rendertext=()=>{\r\n// this.setstata({texttorender:this.successtext[0]})\r\n// }\r\n// changeopacity=()=>{\r\n\r\n//  this.setState({\r\n//    height:this.state.height +=5,\r\n//   width:this.state.height +=5,\r\n// opacity:this.state.opacity +0.03,\r\n\r\n//  })\r\n\r\n// }\r\n\r\n\r\ncomponentDidMount(){\r\n\r\nlet intervalid= setInterval(()=>{\r\n  this.setState({\r\n   height:this.state.height +=5,\r\n  width:this.state.height +=5,\r\nopacity:this.state.opacity +0.03,\r\nintervalid:intervalid\r\n  })} ,10)\r\n\r\n//  if(this.state.height>=200){\r\n//  this.setState({intervalid:intervalid})\r\n//  }\r\n   \r\n  \r\n}\r\n\r\n\r\n\r\nshouldComponentUpdate=()=>{\r\n  if(this.state.height >=200){\r\n// alert(this.state.intervalid)\r\n   clearInterval(this.state.intervalid)\r\n this.props.navigation.navigate(\"MainApp\")\r\n   return false\r\n     }else{\r\n     return  true\r\n     \r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nhandlesuccess=()=>{\r\n  return(\r\n    {\r\n       height:this.state.height,\r\n    width:this.state.width,\r\n    opacity:this.state.opacity,\r\n    }\r\n  )\r\n}\r\n\r\n\r\n\r\nrender(){\r\n \r\n\r\n  return(\r\n\r\n    <View style={styles.mainview}>\r\n     <Image source={require(\"./assets/done.png\")} style={this.handlesuccess()} />\r\n     <Text style={styles.text}>success you already registerd  </Text>\r\n   \r\n\r\n     </View> \r\n     \r\n     )\r\n}\r\n  \r\n \r\n   \r\n     \r\n     \r\n    \r\n}\r\n\r\nconst styles=StyleSheet.create( {\r\nmainview:{\r\n alignItems:\"center\",\r\n  paddingTop:\"50%\"\r\n},\r\nimageitem:{\r\n  height:200,\r\n  width:200,\r\n  opacity:1\r\n},\r\ntext:{\r\n  color:'green',\r\n  // opacity:0.5\r\n},\r\n  }\r\n)\r\nexport default SuccessScreen\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}