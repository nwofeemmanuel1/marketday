{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\DE SCHOOL BOY\\\\Desktop\\\\MARKET_DAy\\\\MarketDay\\\\node_modules\\\\react-native-cards\\\\src\\\\Touchable.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { IS_ANDROID, IS_LT_LOLLIPOP, noop } from \"./utils\";\n\nvar Touchable = function Touchable(_ref) {\n  var onPress = _ref.onPress,\n      style = _ref.style,\n      children = _ref.children;\n\n  if (IS_ANDROID && !IS_LT_LOLLIPOP) {\n    return React.createElement(TouchableNativeFeedback, {\n      background: TouchableNativeFeedback.SelectableBackground(),\n      onPress: onPress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, children));\n  } else {\n    return React.createElement(TouchableOpacity, {\n      onPress: onPress,\n      style: style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, children);\n  }\n};\n\nTouchable.propTypes = {\n  onPress: PropTypes.func.isRequired,\n  style: ViewPropTypes.style,\n  children: PropTypes.node.isRequired\n};\nTouchable.defaultProps = {\n  onPress: noop,\n  style: {}\n};\nexport default Touchable;","map":{"version":3,"sources":["C:/Users/DE SCHOOL BOY/Desktop/MARKET_DAy/MarketDay/node_modules/react-native-cards/src/Touchable.js"],"names":["React","PropTypes","ViewPropTypes","IS_ANDROID","IS_LT_LOLLIPOP","noop","Touchable","onPress","style","children","TouchableNativeFeedback","SelectableBackground","propTypes","func","isRequired","node","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;SAKEC,a;AAEF,SACEC,UADF,EAEEC,cAFF,EAGEC,IAHF;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAkC;AAAA,MAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAClD,MAAIN,UAAU,IAAI,CAACC,cAAnB,EAAmC;AACjC,WACE,oBAAC,uBAAD;AACE,MAAA,UAAU,EAAEM,uBAAuB,CAACC,oBAAxB,EADd;AAEE,MAAA,OAAO,EAAEJ,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAEC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGC,QAHH,CAJF,CADF;AAYD,GAbD,MAcK;AACH,WACE,oBAAC,gBAAD;AACE,MAAA,OAAO,EAAEF,OADX;AAEE,MAAA,KAAK,EAAEC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGC,QAJH,CADF;AAQD;AACF,CAzBD;;AA2BAH,SAAS,CAACM,SAAV,GAAsB;AACpBL,EAAAA,OAAO,EAAEN,SAAS,CAACY,IAAV,CAAeC,UADJ;AAEpBN,EAAAA,KAAK,EAAEN,aAAa,CAACM,KAFD;AAGpBC,EAAAA,QAAQ,EAAER,SAAS,CAACc,IAAV,CAAeD;AAHL,CAAtB;AAMAR,SAAS,CAACU,YAAV,GAAyB;AACvBT,EAAAA,OAAO,EAAEF,IADc;AAEvBG,EAAAA,KAAK,EAAE;AAFgB,CAAzB;AAKA,eAAeF,SAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  View,\r\n  TouchableOpacity,\r\n  TouchableNativeFeedback,\r\n  ViewPropTypes,\r\n} from 'react-native';\r\nimport {\r\n  IS_ANDROID,\r\n  IS_LT_LOLLIPOP,\r\n  noop,\r\n} from './utils';\r\n\r\nconst Touchable = ({ onPress, style, children }) => {\r\n  if (IS_ANDROID && !IS_LT_LOLLIPOP) {\r\n    return (\r\n      <TouchableNativeFeedback\r\n        background={TouchableNativeFeedback.SelectableBackground()}\r\n        onPress={onPress}\r\n      >\r\n        <View\r\n          style={style}\r\n        >\r\n          {children}\r\n        </View>\r\n      </TouchableNativeFeedback>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={onPress}\r\n        style={style}\r\n      >\r\n        {children}\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n};\r\n\r\nTouchable.propTypes = {\r\n  onPress: PropTypes.func.isRequired,\r\n  style: ViewPropTypes.style,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nTouchable.defaultProps = {\r\n  onPress: noop,\r\n  style: {}\r\n};\r\n\r\nexport default Touchable;\r\n"]},"metadata":{},"sourceType":"module"}